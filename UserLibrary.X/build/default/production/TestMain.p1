Version 4.0 HI-TECH Software Intermediate Code
"121 TestMain.c
[; ;TestMain.c: 121: static teInputMode eInputMode;
[c E2587 0 1 2 3 .. ]
[n E2587 . INPUT_MODE_NONE INPUT_MODE_CURRENT INPUT_MODE_FINAL INPUT_MODE_BUFFERING  ]
[p mainexit ]
"1706 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1706: extern volatile unsigned char OSCCON __attribute__((address(0x099)));
[v _OSCCON `Vuc ~T0 @X0 0 e@153 ]
"2861
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2861: extern volatile unsigned char ANSELA __attribute__((address(0x18C)));
[v _ANSELA `Vuc ~T0 @X0 0 e@396 ]
"2913
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2913: extern volatile unsigned char ANSELB __attribute__((address(0x18D)));
[v _ANSELB `Vuc ~T0 @X0 0 e@397 ]
"1152
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1152: extern volatile unsigned char TRISA __attribute__((address(0x08C)));
[v _TRISA `Vuc ~T0 @X0 0 e@140 ]
"1214
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1214: extern volatile unsigned char TRISB __attribute__((address(0x08D)));
[v _TRISB `Vuc ~T0 @X0 0 e@141 ]
"429
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 429: extern volatile unsigned char PORTA __attribute__((address(0x00C)));
[v _PORTA `Vuc ~T0 @X0 0 e@12 ]
"491
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 491: extern volatile unsigned char PORTB __attribute__((address(0x00D)));
[v _PORTB `Vuc ~T0 @X0 0 e@13 ]
"1455
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1455: extern volatile unsigned char OPTION_REG __attribute__((address(0x095)));
[v _OPTION_REG `Vuc ~T0 @X0 0 e@149 ]
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 732: extern volatile unsigned char TMR0 __attribute__((address(0x015)));
[v _TMR0 `Vuc ~T0 @X0 0 e@21 ]
"7960
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 7960: extern volatile __bit TMR0IF __attribute__((address(0x5A)));
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"7957
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 7957: extern volatile __bit TMR0IE __attribute__((address(0x5D)));
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"165 TestMain.c
[; ;TestMain.c: 165:     I2C_vInitSlaveSSP1((8), I2C_SLAVE_STD, ssp1_vCallback);
[c E2444 0 1 .. ]
[n E2444 I2C_SlaveMode I2C_SLAVE_STD I2C_SLAVE_HIGH  ]
[v F2469 `(v ~T0 @X0 0 tf2`uc`uc ]
"109 ./i2cUtil.h
[; ;./i2cUtil.h: 109: extern void I2C_vInitSlaveSSP1(unsigned char u8Address,
[v _I2C_vInitSlaveSSP1 `(v ~T0 @X0 0 ef3`uc`E2444`*F2469 ]
"82 TestMain.c
[; ;TestMain.c: 82: static void ssp1_vCallback(unsigned char u8BusNo, unsigned char u8EvtType);
[v _ssp1_vCallback `(v ~T0 @X0 0 sf2`uc`uc ]
"167
[; ;TestMain.c: 167:     I2C_vInitMasterSSP2(I2C_MASTER_STD, I2C_CLK_DIV_STD_8MHZ);
[c E2441 0 1 .. ]
[n E2441 I2C_MasterMode I2C_MASTER_STD I2C_MASTER_HIGH  ]
"105 ./i2cUtil.h
[; ;./i2cUtil.h: 105: extern void I2C_vInitMasterSSP2(enum I2C_MasterMode eMode, unsigned char u8ClkDiv);
[v _I2C_vInitMasterSSP2 `(v ~T0 @X0 0 ef2`E2441`uc ]
"167 TestMain.c
[; ;TestMain.c: 167:     I2C_vInitMasterSSP2(I2C_MASTER_STD, I2C_CLK_DIV_STD_8MHZ);
[c E2447 9 19 39 79 4 9 19 .. ]
[n E2447 I2C_ClockDiv I2C_CLK_DIV_STD_4MHZ I2C_CLK_DIV_STD_8MHZ I2C_CLK_DIV_STD_16MHZ I2C_CLK_DIV_STD_32MHZ I2C_CLK_DIV_HIGH_8MHZ I2C_CLK_DIV_HIGH_16MHZ I2C_CLK_DIV_HIGH_32MHZ  ]
"54 ./keypad.h
[; ;./keypad.h: 54: typedef struct {
[s S354 `uc 1 `ui -> 4 `i `ui -> 4 `i `uc 1 `ui 1 `uc -> 4 `i `uc 1 `uc 1 `uc 1 ]
[n S354 . u8CheckCnt u16PinCols u16PinRows u8BeforeKeyNo u16KeyChkCnt u8KeyBuffer u8BuffSize u8BuffBeginIdx u8BuffEndIdx ]
"82
[; ;./keypad.h: 82: extern void KEYPAD_vInit(tsKEYPAD_status *spStatus);
[v _KEYPAD_vInit `(v ~T0 @X0 0 ef1`*S354 ]
"7609 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 7609: extern volatile __bit PEIE __attribute__((address(0x5E)));
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"7276
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 7276: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"7675
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 7675: extern volatile __bit RB0 __attribute__((address(0x68)));
[v _RB0 `Vb ~T0 @X0 0 e@104 ]
"7684
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 7684: extern volatile __bit RB3 __attribute__((address(0x6B)));
[v _RB3 `Vb ~T0 @X0 0 e@107 ]
[v F2428 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF2428 ~T0 @X0 0 e ]
[p i __delay ]
"55 ./st7032.h
[; ;./st7032.h: 55: extern void ST7032_vInitSSP2();
[v _ST7032_vInitSSP2 `(v ~T0 @X0 0 e? ]
"92 TestMain.c
[; ;TestMain.c: 92: static void ssp2_vLCDTest01();
[v _ssp2_vLCDTest01 `(v ~T0 @X0 0 s? ]
"94
[; ;TestMain.c: 94: static void ssp2_vLCDTest02();
[v _ssp2_vLCDTest02 `(v ~T0 @X0 0 s? ]
"96
[; ;TestMain.c: 96: static void ssp2_vLCDTest03();
[v _ssp2_vLCDTest03 `(v ~T0 @X0 0 s? ]
"98
[; ;TestMain.c: 98: static void ssp2_vLCDTest04();
[v _ssp2_vLCDTest04 `(v ~T0 @X0 0 s? ]
[t ~ __interrupt . k ]
[t T1 __interrupt high_priority ]
"80
[; ;TestMain.c: 80: static void timer_vInterrupt();
[v _timer_vInterrupt `(v ~T0 @X0 0 s? ]
"153 ./i2cUtil.h
[; ;./i2cUtil.h: 153: extern void I2C_vSlaveIsrSSP1();
[v _I2C_vSlaveIsrSSP1 `(v ~T0 @X0 0 e? ]
"90 ./keypad.h
[; ;./keypad.h: 90: extern unsigned char KEYPAD_u8Read();
[v _KEYPAD_u8Read `(uc ~T0 @X0 0 e? ]
"84
[; ;./keypad.h: 84: extern unsigned char KEYPAD_bUpdateBuffer();
[v _KEYPAD_bUpdateBuffer `(uc ~T0 @X0 0 e? ]
"3586 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3586: extern volatile unsigned char SSP1BUF __attribute__((address(0x211)));
[v _SSP1BUF `Vuc ~T0 @X0 0 e@529 ]
"354 TestMain.c
[; ;TestMain.c: 354:     }
[c E2455 1 33 5 36 100 255 .. ]
[n E2455 I2C_SlaveEvent I2C_SLV_EVT_WRITE_ADDR I2C_SLV_EVT_WRITE_DATA I2C_SLV_EVT_READ_ADDR I2C_SLV_EVT_READ_ACK I2C_SLV_EVT_READ_NACK I2C_SLV_EVT_BUS_ERROR  ]
"61 ./st7032.h
[; ;./st7032.h: 61: extern void ST7032_vDispSettingSSP2(unsigned char bDisp, unsigned char bCursor, unsigned char bBlink);
[v _ST7032_vDispSettingSSP2 `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"103
[; ;./st7032.h: 103: extern unsigned char ST7032_bSetCursorSSP2(unsigned char u8RowNo, unsigned char u8ColNo);
[v _ST7032_bSetCursorSSP2 `(uc ~T0 @X0 0 ef2`uc`uc ]
"139
[; ;./st7032.h: 139: extern void ST7032_vWriteStringSSP2(char* pcStr);
[v _ST7032_vWriteStringSSP2 `(v ~T0 @X0 0 ef1`*uc ]
"133
[; ;./st7032.h: 133: extern void ST7032_vWriteCharSSP2(char cData);
[v _ST7032_vWriteCharSSP2 `(v ~T0 @X0 0 ef1`uc ]
"125 ./i2cUtil.h
[; ;./i2cUtil.h: 125: extern unsigned char I2C_u8MstStartSSP2(unsigned char u8Address, unsigned char bReadFlg);
[v _I2C_u8MstStartSSP2 `(uc ~T0 @X0 0 ef2`uc`uc ]
"141
[; ;./i2cUtil.h: 141: extern unsigned char I2C_u8MstTxSSP2(unsigned char u8Data);
[v _I2C_u8MstTxSSP2 `(uc ~T0 @X0 0 ef1`uc ]
"133
[; ;./i2cUtil.h: 133: extern void I2C_vMstStopSSP2();
[v _I2C_vMstStopSSP2 `(v ~T0 @X0 0 e? ]
"149
[; ;./i2cUtil.h: 149: extern unsigned char I2C_u8MstRxSSP2(unsigned char bAckFlg);
[v _I2C_u8MstRxSSP2 `(uc ~T0 @X0 0 ef1`uc ]
"79 ./st7032.h
[; ;./st7032.h: 79: extern void ST7032_vClearDispSSP2();
[v _ST7032_vClearDispSSP2 `(v ~T0 @X0 0 e? ]
"41 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c99\stdlib.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c99\stdlib.h: 41: int rand (void);
[v _rand `(i ~T0 @X0 0 ef ]
"145 ./st7032.h
[; ;./st7032.h: 145: extern void ST7032_vWriteDataSSP2(unsigned char* pu8Data, unsigned char u8Len);
[v _ST7032_vWriteDataSSP2 `(v ~T0 @X0 0 ef2`*uc`uc ]
"91
[; ;./st7032.h: 91: extern unsigned char ST7032_u8GetCursorRowNoSSP2();
[v _ST7032_u8GetCursorRowNoSSP2 `(uc ~T0 @X0 0 e? ]
"97
[; ;./st7032.h: 97: extern unsigned char ST7032_u8GetCursorColNoSSP2();
[v _ST7032_u8GetCursorColNoSSP2 `(uc ~T0 @X0 0 e? ]
"115
[; ;./st7032.h: 115: extern unsigned char ST7032_bCursorRightSSP2();
[v _ST7032_bCursorRightSSP2 `(uc ~T0 @X0 0 e? ]
"109
[; ;./st7032.h: 109: extern unsigned char ST7032_bCursorLeftSSP2();
[v _ST7032_bCursorLeftSSP2 `(uc ~T0 @X0 0 e? ]
"127
[; ;./st7032.h: 127: extern void ST7032_vWriteCGRAMSSP2(unsigned char u8CharNo, unsigned char* pu8BitMap);
[v _ST7032_vWriteCGRAMSSP2 `(v ~T0 @X0 0 ef2`uc`*uc ]
"85
[; ;./st7032.h: 85: extern void ST7032_vClearIconSSP2();
[v _ST7032_vClearIconSSP2 `(v ~T0 @X0 0 e? ]
"151
[; ;./st7032.h: 151: extern void ST7032_vWriteIconSSP2(unsigned char u8Addr, unsigned char u8Map);
[v _ST7032_vWriteIconSSP2 `(v ~T0 @X0 0 ef2`uc`uc ]
"88 ./keypad.h
[; ;./keypad.h: 88: extern void KEYPAD_vClearBuffer();
[v _KEYPAD_vClearBuffer `(v ~T0 @X0 0 e? ]
"92
[; ;./keypad.h: 92: extern unsigned char KEYPAD_u8ReadBuffer();
[v _KEYPAD_u8ReadBuffer `(uc ~T0 @X0 0 e? ]
"94
[; ;./keypad.h: 94: extern unsigned char KEYPAD_u8ReadFinal();
[v _KEYPAD_u8ReadFinal `(uc ~T0 @X0 0 e? ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 54: __asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
"74
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 74: __asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
"94
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 94: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"114
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 114: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"177
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 177: __asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
"197
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 197: __asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
"221
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 221: __asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
"241
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 241: __asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
"261
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 261: __asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
"313
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 313: __asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
"333
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 333: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"353
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 353: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"431
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 431: __asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
"493
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 493: __asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
"555
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 555: __asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
"617
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 617: __asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
"668
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 668: __asm("PIR3 equ 013h");
[; <" PIR3 equ 013h ;# ">
"708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 708: __asm("PIR4 equ 014h");
[; <" PIR4 equ 014h ;# ">
"734
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 734: __asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
"754
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 754: __asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
"761
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 761: __asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
"781
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 781: __asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
"801
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 801: __asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
"873
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 873: __asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 943: __asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
"963
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 963: __asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
"983
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 983: __asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
"1054
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1054: __asm("CPSCON0 equ 01Eh");
[; <" CPSCON0 equ 01Eh ;# ">
"1108
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1108: __asm("CPSCON1 equ 01Fh");
[; <" CPSCON1 equ 01Fh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1154: __asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
"1216
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1216: __asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
"1278
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1278: __asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
"1340
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1340: __asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
"1391
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1391: __asm("PIE3 equ 093h");
[; <" PIE3 equ 093h ;# ">
"1431
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1431: __asm("PIE4 equ 094h");
[; <" PIE4 equ 094h ;# ">
"1457
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1457: __asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
"1540
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1540: __asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
"1591
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1591: __asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
"1650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1650: __asm("OSCTUNE equ 098h");
[; <" OSCTUNE equ 098h ;# ">
"1708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1708: __asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
"1780
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1780: __asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
"1842
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1842: __asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
"1849
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1849: __asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
"1869
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1869: __asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
"1889
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1889: __asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
"1969
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 1969: __asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
"2041
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2041: __asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
"2098
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2098: __asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
"2160
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2160: __asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
"2217
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2217: __asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
"2283
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2283: __asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
"2340
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2340: __asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
"2406
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2406: __asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
"2432
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2432: __asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
"2459
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2459: __asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
"2535
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2535: __asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
"2596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2596: __asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
"2648
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2648: __asm("SRCON0 equ 011Ah");
[; <" SRCON0 equ 011Ah ;# ">
"2719
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2719: __asm("SRCON1 equ 011Bh");
[; <" SRCON1 equ 011Bh ;# ">
"2781
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2781: __asm("APFCON0 equ 011Dh");
[; <" APFCON0 equ 011Dh ;# ">
"2843
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2843: __asm("APFCON1 equ 011Eh");
[; <" APFCON1 equ 011Eh ;# ">
"2863
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2863: __asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
"2915
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2915: __asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
"2980
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2980: __asm("EEADR equ 0191h");
[; <" EEADR equ 0191h ;# ">
"2987
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 2987: __asm("EEADRL equ 0191h");
[; <" EEADRL equ 0191h ;# ">
"3007
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3007: __asm("EEADRH equ 0192h");
[; <" EEADRH equ 0192h ;# ">
"3027
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3027: __asm("EEDAT equ 0193h");
[; <" EEDAT equ 0193h ;# ">
"3034
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3034: __asm("EEDATL equ 0193h");
[; <" EEDATL equ 0193h ;# ">
"3039
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3039: __asm("EEDATA equ 0193h");
[; <" EEDATA equ 0193h ;# ">
"3072
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3072: __asm("EEDATH equ 0194h");
[; <" EEDATH equ 0194h ;# ">
"3092
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3092: __asm("EECON1 equ 0195h");
[; <" EECON1 equ 0195h ;# ">
"3154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3154: __asm("EECON2 equ 0196h");
[; <" EECON2 equ 0196h ;# ">
"3174
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3174: __asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
"3194
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3194: __asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
"3214
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3214: __asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
"3221
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3221: __asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
"3226
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3226: __asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
"3230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3230: __asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
"3275
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3275: __asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3280: __asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
"3313
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3313: __asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
"3375
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3375: __asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
"3437
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3437: __asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
"3489
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3489: __asm("WPUA equ 020Ch");
[; <" WPUA equ 020Ch ;# ">
"3518
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3518: __asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
"3588
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3588: __asm("SSP1BUF equ 0211h");
[; <" SSP1BUF equ 0211h ;# ">
"3593
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3593: __asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
"3626
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3626: __asm("SSP1ADD equ 0212h");
[; <" SSP1ADD equ 0212h ;# ">
"3631
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3631: __asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
"3664
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3664: __asm("SSP1MSK equ 0213h");
[; <" SSP1MSK equ 0213h ;# ">
"3669
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3669: __asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
"3702
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3702: __asm("SSP1STAT equ 0214h");
[; <" SSP1STAT equ 0214h ;# ">
"3707
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3707: __asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
"3824
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3824: __asm("SSP1CON1 equ 0215h");
[; <" SSP1CON1 equ 0215h ;# ">
"3829
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3829: __asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
"3833
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 3833: __asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
"4028
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4028: __asm("SSP1CON2 equ 0216h");
[; <" SSP1CON2 equ 0216h ;# ">
"4033
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4033: __asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
"4150
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4150: __asm("SSP1CON3 equ 0217h");
[; <" SSP1CON3 equ 0217h ;# ">
"4155
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4155: __asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
"4272
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4272: __asm("SSP2BUF equ 0219h");
[; <" SSP2BUF equ 0219h ;# ">
"4292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4292: __asm("SSP2ADD equ 021Ah");
[; <" SSP2ADD equ 021Ah ;# ">
"4312
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4312: __asm("SSP2MSK equ 021Bh");
[; <" SSP2MSK equ 021Bh ;# ">
"4332
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4332: __asm("SSP2STAT equ 021Ch");
[; <" SSP2STAT equ 021Ch ;# ">
"4394
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4394: __asm("SSP2CON1 equ 021Dh");
[; <" SSP2CON1 equ 021Dh ;# ">
"4464
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4464: __asm("SSP2CON2 equ 021Eh");
[; <" SSP2CON2 equ 021Eh ;# ">
"4526
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4526: __asm("SSP2CON3 equ 021Fh");
[; <" SSP2CON3 equ 021Fh ;# ">
"4588
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4588: __asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
"4595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4595: __asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
"4615
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4615: __asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
"4635
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4635: __asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
"4717
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4717: __asm("PWM1CON equ 0294h");
[; <" PWM1CON equ 0294h ;# ">
"4787
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4787: __asm("CCP1AS equ 0295h");
[; <" CCP1AS equ 0295h ;# ">
"4792
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4792: __asm("ECCP1AS equ 0295h");
[; <" ECCP1AS equ 0295h ;# ">
"4949
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4949: __asm("PSTR1CON equ 0296h");
[; <" PSTR1CON equ 0296h ;# ">
"4993
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 4993: __asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
"5000
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5000: __asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
"5020
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5020: __asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
"5040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5040: __asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
"5122
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5122: __asm("PWM2CON equ 029Bh");
[; <" PWM2CON equ 029Bh ;# ">
"5192
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5192: __asm("CCP2AS equ 029Ch");
[; <" CCP2AS equ 029Ch ;# ">
"5197
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5197: __asm("ECCP2AS equ 029Ch");
[; <" ECCP2AS equ 029Ch ;# ">
"5354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5354: __asm("PSTR2CON equ 029Dh");
[; <" PSTR2CON equ 029Dh ;# ">
"5398
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5398: __asm("CCPTMRS equ 029Eh");
[; <" CCPTMRS equ 029Eh ;# ">
"5403
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5403: __asm("CCPTMRS0 equ 029Eh");
[; <" CCPTMRS0 equ 029Eh ;# ">
"5572
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5572: __asm("CCPR3 equ 0311h");
[; <" CCPR3 equ 0311h ;# ">
"5579
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5579: __asm("CCPR3L equ 0311h");
[; <" CCPR3L equ 0311h ;# ">
"5599
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5599: __asm("CCPR3H equ 0312h");
[; <" CCPR3H equ 0312h ;# ">
"5619
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5619: __asm("CCP3CON equ 0313h");
[; <" CCP3CON equ 0313h ;# ">
"5683
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5683: __asm("CCPR4 equ 0318h");
[; <" CCPR4 equ 0318h ;# ">
"5690
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5690: __asm("CCPR4L equ 0318h");
[; <" CCPR4L equ 0318h ;# ">
"5710
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5710: __asm("CCPR4H equ 0319h");
[; <" CCPR4H equ 0319h ;# ">
"5730
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5730: __asm("CCP4CON equ 031Ah");
[; <" CCP4CON equ 031Ah ;# ">
"5794
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5794: __asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
"5864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5864: __asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
"5934
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 5934: __asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
"6004
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6004: __asm("CLKRCON equ 039Ah");
[; <" CLKRCON equ 039Ah ;# ">
"6080
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6080: __asm("MDCON equ 039Ch");
[; <" MDCON equ 039Ch ;# ">
"6131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6131: __asm("MDSRC equ 039Dh");
[; <" MDSRC equ 039Dh ;# ">
"6184
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6184: __asm("MDCARL equ 039Eh");
[; <" MDCARL equ 039Eh ;# ">
"6249
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6249: __asm("MDCARH equ 039Fh");
[; <" MDCARH equ 039Fh ;# ">
"6314
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6314: __asm("TMR4 equ 0415h");
[; <" TMR4 equ 0415h ;# ">
"6334
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6334: __asm("PR4 equ 0416h");
[; <" PR4 equ 0416h ;# ">
"6354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6354: __asm("T4CON equ 0417h");
[; <" T4CON equ 0417h ;# ">
"6425
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6425: __asm("TMR6 equ 041Ch");
[; <" TMR6 equ 041Ch ;# ">
"6445
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6445: __asm("PR6 equ 041Dh");
[; <" PR6 equ 041Dh ;# ">
"6465
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6465: __asm("T6CON equ 041Eh");
[; <" T6CON equ 041Eh ;# ">
"6536
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6536: __asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
"6568
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6568: __asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
"6588
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6588: __asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
"6608
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6608: __asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
"6628
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6628: __asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
"6648
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6648: __asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
"6668
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6668: __asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
"6688
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6688: __asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
"6708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6708: __asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
"6728
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6728: __asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
"6748
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f1827.h: 6748: __asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
"34 TestMain.c
[p x FOSC  = INTOSC ]
"35
[p x WDTE  = OFF ]
"36
[p x PWRTE = ON ]
"37
[p x MCLRE = OFF ]
"38
[p x CP    = OFF ]
"39
[p x CPD   = OFF ]
"40
[p x BOREN = ON ]
"41
[p x CLKOUTEN = OFF ]
"42
[p x IESO  = OFF ]
"43
[p x FCMEN = OFF ]
"46
[p x WRT    = OFF ]
"47
[p x PLLEN  = OFF ]
"48
[p x STVREN = ON ]
"49
[p x BORV   = HI ]
"50
[p x LVP    = OFF ]
"116
[; ;TestMain.c: 116: static const char HEX_LIST[] = "0123456789ABCDEF";
[v _HEX_LIST `Cuc ~T0 @X0 -> 17 `i s ]
[i _HEX_LIST
:U ..
-> 48 `c
-> 49 `c
-> 50 `c
-> 51 `c
-> 52 `c
-> 53 `c
-> 54 `c
-> 55 `c
-> 56 `c
-> 57 `c
-> 65 `c
-> 66 `c
-> 67 `c
-> 68 `c
-> 69 `c
-> 70 `c
-> 0 `c
..
]
"117
[; ;TestMain.c: 117: static const char KEY_LIST[] = "123A456B789C*0#D";
[v _KEY_LIST `Cuc ~T0 @X0 -> 17 `i s ]
[i _KEY_LIST
:U ..
-> 49 `c
-> 50 `c
-> 51 `c
-> 65 `c
-> 52 `c
-> 53 `c
-> 54 `c
-> 66 `c
-> 55 `c
-> 56 `c
-> 57 `c
-> 67 `c
-> 42 `c
-> 48 `c
-> 35 `c
-> 68 `c
-> 0 `c
..
]
"119
[; ;TestMain.c: 119: static unsigned char u8RxData;
[v _u8RxData `uc ~T0 @X0 1 s ]
"121
[; ;TestMain.c: 121: static teInputMode eInputMode;
[v _eInputMode `E2587 ~T0 @X0 1 s ]
"123
[; ;TestMain.c: 123: static unsigned char u8KeyValue;
[v _u8KeyValue `uc ~T0 @X0 1 s ]
[v $root$_main `(v ~T0 @X0 0 e ]
"138
[; ;TestMain.c: 138: void main() {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"142
[; ;TestMain.c: 142:     OSCCON = 0b01111010;
[e = _OSCCON -> -> 122 `i `uc ]
"143
[; ;TestMain.c: 143:     ANSELA = 0b00000000;
[e = _ANSELA -> -> 0 `i `uc ]
"144
[; ;TestMain.c: 144:     ANSELB = 0b00000000;
[e = _ANSELB -> -> 0 `i `uc ]
"145
[; ;TestMain.c: 145:     TRISA = 0b00011100;
[e = _TRISA -> -> 28 `i `uc ]
"146
[; ;TestMain.c: 146:     TRISB = 0b10110110;
[e = _TRISB -> -> 182 `i `uc ]
"147
[; ;TestMain.c: 147:     PORTA = 0b00000000;
[e = _PORTA -> -> 0 `i `uc ]
"148
[; ;TestMain.c: 148:     PORTB = 0b00000000;
[e = _PORTB -> -> 0 `i `uc ]
"156
[; ;TestMain.c: 156:     OPTION_REG = 0b00000110;
[e = _OPTION_REG -> -> 6 `i `uc ]
"157
[; ;TestMain.c: 157:     TMR0 = 0;
[e = _TMR0 -> -> 0 `i `uc ]
"158
[; ;TestMain.c: 158:     TMR0IF = 0;
[e = _TMR0IF -> -> 0 `i `b ]
"159
[; ;TestMain.c: 159:     TMR0IE = 1;
[e = _TMR0IE -> -> 1 `i `b ]
"165
[; ;TestMain.c: 165:     I2C_vInitSlaveSSP1((8), I2C_SLAVE_STD, ssp1_vCallback);
[e ( _I2C_vInitSlaveSSP1 (3 , , -> -> 8 `i `uc . `E2444 0 &U _ssp1_vCallback ]
"167
[; ;TestMain.c: 167:     I2C_vInitMasterSSP2(I2C_MASTER_STD, I2C_CLK_DIV_STD_8MHZ);
[e ( _I2C_vInitMasterSSP2 (2 , . `E2441 0 -> . `E2447 1 `uc ]
"172
[; ;TestMain.c: 172:     tsKEYPAD_status keypadSts;
[v _keypadSts `S354 ~T0 @X0 1 a ]
"174
[; ;TestMain.c: 174:     keypadSts.u16PinCols[0] = (0x0000) | 0b00000100;
[e = *U + &U . _keypadSts 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _keypadSts 1 `ui `ux -> | -> 0 `i -> 4 `i `ui ]
"175
[; ;TestMain.c: 175:     keypadSts.u16PinCols[1] = (0x0000) | 0b00001000;
[e = *U + &U . _keypadSts 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _keypadSts 1 `ui `ux -> | -> 0 `i -> 8 `i `ui ]
"176
[; ;TestMain.c: 176:     keypadSts.u16PinCols[2] = (0x0000) | 0b00010000;
[e = *U + &U . _keypadSts 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _keypadSts 1 `ui `ux -> | -> 0 `i -> 16 `i `ui ]
"177
[; ;TestMain.c: 177:     keypadSts.u16PinCols[3] = (0x0100) | 0b10000000;
[e = *U + &U . _keypadSts 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _keypadSts 1 `ui `ux -> | -> 256 `i -> 128 `i `ui ]
"179
[; ;TestMain.c: 179:     keypadSts.u16PinRows[0] = (0x0000) | 0b00000010;
[e = *U + &U . _keypadSts 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _keypadSts 2 `ui `ux -> | -> 0 `i -> 2 `i `ui ]
"180
[; ;TestMain.c: 180:     keypadSts.u16PinRows[1] = (0x0000) | 0b00000001;
[e = *U + &U . _keypadSts 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _keypadSts 2 `ui `ux -> | -> 0 `i -> 1 `i `ui ]
"181
[; ;TestMain.c: 181:     keypadSts.u16PinRows[2] = (0x0000) | 0b10000000;
[e = *U + &U . _keypadSts 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _keypadSts 2 `ui `ux -> | -> 0 `i -> 128 `i `ui ]
"182
[; ;TestMain.c: 182:     keypadSts.u16PinRows[3] = (0x0000) | 0b01000000;
[e = *U + &U . _keypadSts 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _keypadSts 2 `ui `ux -> | -> 0 `i -> 64 `i `ui ]
"185
[; ;TestMain.c: 185:     KEYPAD_vInit(&keypadSts);
[e ( _KEYPAD_vInit (1 &U _keypadSts ]
"190
[; ;TestMain.c: 190:     PEIE = 1;
[e = _PEIE -> -> 1 `i `b ]
"191
[; ;TestMain.c: 191:     GIE = 1;
[e = _GIE -> -> 1 `i `b ]
"197
[; ;TestMain.c: 197:     RB0 = (1);
[e = _RB0 -> -> 1 `i `b ]
"198
[; ;TestMain.c: 198:     RB3 = (0);
[e = _RB3 -> -> 0 `i `b ]
"199
[; ;TestMain.c: 199:     _delay((unsigned long)((40)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"201
[; ;TestMain.c: 201:     ST7032_vInitSSP2();
[e ( _ST7032_vInitSSP2 ..  ]
"207
[; ;TestMain.c: 207:     while((1)) {
[e :U 357 ]
{
"217
[; ;TestMain.c: 217:         ssp2_vLCDTest01();
[e ( _ssp2_vLCDTest01 ..  ]
"219
[; ;TestMain.c: 219:         ssp2_vLCDTest02();
[e ( _ssp2_vLCDTest02 ..  ]
"221
[; ;TestMain.c: 221:         ssp2_vLCDTest03();
[e ( _ssp2_vLCDTest03 ..  ]
"223
[; ;TestMain.c: 223:         ssp2_vLCDTest04();
[e ( _ssp2_vLCDTest04 ..  ]
"232
[; ;TestMain.c: 232:     }
}
[e :U 356 ]
[e $U 357  ]
[e :U 358 ]
"233
[; ;TestMain.c: 233: }
[e :UE 355 ]
}
[v $root$_ISR `(v ~T0 @X0 0 e ]
"248
[; ;TestMain.c: 248: void __attribute__((picinterrupt(("high_priority")))) ISR() {
[v _ISR `(v ~T1 @X0 1 ef ]
{
[e :U _ISR ]
[f ]
"253
[; ;TestMain.c: 253:     timer_vInterrupt();
[e ( _timer_vInterrupt ..  ]
"258
[; ;TestMain.c: 258:     I2C_vSlaveIsrSSP1();
[e ( _I2C_vSlaveIsrSSP1 ..  ]
"259
[; ;TestMain.c: 259: }
[e :UE 359 ]
}
"274
[; ;TestMain.c: 274: static void timer_vInterrupt() {
[v _timer_vInterrupt `(v ~T0 @X0 1 sf ]
{
[e :U _timer_vInterrupt ]
[f ]
"276
[; ;TestMain.c: 276:     if (TMR0IF != 1) {
[e $ ! != -> _TMR0IF `i -> 1 `i 361  ]
{
"277
[; ;TestMain.c: 277:         return;
[e $UE 360  ]
"278
[; ;TestMain.c: 278:     }
}
[e :U 361 ]
"280
[; ;TestMain.c: 280:     TMR0 = 0;
[e = _TMR0 -> -> 0 `i `uc ]
"281
[; ;TestMain.c: 281:     TMR0IF = 0;
[e = _TMR0IF -> -> 0 `i `b ]
"283
[; ;TestMain.c: 283:     switch (eInputMode) {
[e $U 363  ]
{
"285
[; ;TestMain.c: 285:         case INPUT_MODE_NONE:
[e :U 364 ]
"286
[; ;TestMain.c: 286:             break;
[e $U 362  ]
"288
[; ;TestMain.c: 288:         case INPUT_MODE_CURRENT:
[e :U 365 ]
"289
[; ;TestMain.c: 289:             u8KeyValue = KEYPAD_u8Read();
[e = _u8KeyValue ( _KEYPAD_u8Read ..  ]
"290
[; ;TestMain.c: 290:             break;
[e $U 362  ]
"292
[; ;TestMain.c: 292:         case INPUT_MODE_FINAL:
[e :U 366 ]
"294
[; ;TestMain.c: 294:             KEYPAD_bUpdateBuffer();
[e ( _KEYPAD_bUpdateBuffer ..  ]
"295
[; ;TestMain.c: 295:             break;
[e $U 362  ]
"297
[; ;TestMain.c: 297:         case INPUT_MODE_BUFFERING:
[e :U 367 ]
"299
[; ;TestMain.c: 299:             KEYPAD_bUpdateBuffer();
[e ( _KEYPAD_bUpdateBuffer ..  ]
"300
[; ;TestMain.c: 300:             break;
[e $U 362  ]
"301
[; ;TestMain.c: 301:         default:
[e :U 368 ]
"302
[; ;TestMain.c: 302:             break;
[e $U 362  ]
"303
[; ;TestMain.c: 303:     }
}
[e $U 362  ]
[e :U 363 ]
[e [\ -> _eInputMode `ui , $ -> . `E2587 0 `ui 364
 , $ -> . `E2587 1 `ui 365
 , $ -> . `E2587 2 `ui 366
 , $ -> . `E2587 3 `ui 367
 368 ]
[e :U 362 ]
"304
[; ;TestMain.c: 304: }
[e :UE 360 ]
}
"321
[; ;TestMain.c: 321: static void ssp1_vCallback(unsigned char u8BusNo, unsigned char u8EvtType) {
[v _ssp1_vCallback `(v ~T0 @X0 1 sf2`uc`uc ]
{
[e :U _ssp1_vCallback ]
[v _u8BusNo `uc ~T0 @X0 1 r1 ]
[v _u8EvtType `uc ~T0 @X0 1 r2 ]
[f ]
"322
[; ;TestMain.c: 322:     unsigned char u8Data;
[v _u8Data `uc ~T0 @X0 1 a ]
"323
[; ;TestMain.c: 323:     switch (u8EvtType) {
[e $U 371  ]
{
"324
[; ;TestMain.c: 324:         case I2C_SLV_EVT_WRITE_ADDR:
[e :U 372 ]
"327
[; ;TestMain.c: 327:             u8Data = SSP1BUF;
[e = _u8Data _SSP1BUF ]
"328
[; ;TestMain.c: 328:             break;
[e $U 370  ]
"329
[; ;TestMain.c: 329:         case I2C_SLV_EVT_WRITE_DATA:
[e :U 373 ]
"332
[; ;TestMain.c: 332:             u8RxData = SSP1BUF;
[e = _u8RxData _SSP1BUF ]
"333
[; ;TestMain.c: 333:             break;
[e $U 370  ]
"334
[; ;TestMain.c: 334:         case I2C_SLV_EVT_READ_ADDR:
[e :U 374 ]
"337
[; ;TestMain.c: 337:             u8Data = SSP1BUF;
[e = _u8Data _SSP1BUF ]
"339
[; ;TestMain.c: 339:             SSP1BUF = u8RxData;
[e = _SSP1BUF _u8RxData ]
"340
[; ;TestMain.c: 340:             u8RxData++;
[e ++ _u8RxData -> -> 1 `i `uc ]
"341
[; ;TestMain.c: 341:             break;
[e $U 370  ]
"342
[; ;TestMain.c: 342:         case I2C_SLV_EVT_READ_ACK:
[e :U 375 ]
"345
[; ;TestMain.c: 345:             SSP1BUF = u8RxData;
[e = _SSP1BUF _u8RxData ]
"346
[; ;TestMain.c: 346:             u8RxData++;
[e ++ _u8RxData -> -> 1 `i `uc ]
"347
[; ;TestMain.c: 347:             break;
[e $U 370  ]
"348
[; ;TestMain.c: 348:         case I2C_SLV_EVT_READ_NACK:
[e :U 376 ]
"351
[; ;TestMain.c: 351:             break;
[e $U 370  ]
"352
[; ;TestMain.c: 352:         default:
[e :U 377 ]
"353
[; ;TestMain.c: 353:             break;
[e $U 370  ]
"354
[; ;TestMain.c: 354:     }
}
[e $U 370  ]
[e :U 371 ]
[e [\ -> _u8EvtType `i , $ . `E2455 0 372
 , $ . `E2455 1 373
 , $ . `E2455 2 374
 , $ . `E2455 3 375
 , $ . `E2455 4 376
 377 ]
[e :U 370 ]
"355
[; ;TestMain.c: 355: }
[e :UE 369 ]
}
"370
[; ;TestMain.c: 370: static void ssp2_vI2CTest01() {
[v _ssp2_vI2CTest01 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vI2CTest01 ]
[f ]
"375
[; ;TestMain.c: 375:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"377
[; ;TestMain.c: 377:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"378
[; ;TestMain.c: 378:     ST7032_vWriteStringSSP2("Test:I2C 01     ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 1C ]
"379
[; ;TestMain.c: 379:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"380
[; ;TestMain.c: 380:     ST7032_vWriteStringSSP2("Tx 0x  ->Rx 0x  ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 2C ]
"386
[; ;TestMain.c: 386:     u8RxData = 0xFF;
[e = _u8RxData -> -> 255 `i `uc ]
"387
[; ;TestMain.c: 387:     unsigned char u8TxData;
[v _u8TxData `uc ~T0 @X0 1 a ]
"388
[; ;TestMain.c: 388:     for (u8TxData = 0; u8TxData < 255; u8TxData++) {
{
[e = _u8TxData -> -> 0 `i `uc ]
[e $ < -> _u8TxData `i -> 255 `i 379  ]
[e $U 380  ]
[e :U 379 ]
{
"390
[; ;TestMain.c: 390:         ST7032_bSetCursorSSP2(1, 5);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 5 `i `uc ]
"391
[; ;TestMain.c: 391:         ST7032_vWriteCharSSP2(HEX_LIST[u8TxData / 16]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> / -> _u8TxData `i -> 16 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"392
[; ;TestMain.c: 392:         ST7032_vWriteCharSSP2(HEX_LIST[u8TxData % 16]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> % -> _u8TxData `i -> 16 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"394
[; ;TestMain.c: 394:         I2C_u8MstStartSSP2((8), (0));
[e ( _I2C_u8MstStartSSP2 (2 , -> -> 8 `i `uc -> -> 0 `i `uc ]
"395
[; ;TestMain.c: 395:         I2C_u8MstTxSSP2(u8TxData);
[e ( _I2C_u8MstTxSSP2 (1 _u8TxData ]
"396
[; ;TestMain.c: 396:         I2C_vMstStopSSP2();
[e ( _I2C_vMstStopSSP2 ..  ]
"398
[; ;TestMain.c: 398:         ST7032_bSetCursorSSP2(1, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
"399
[; ;TestMain.c: 399:         if (u8RxData == u8TxData) {
[e $ ! == -> _u8RxData `i -> _u8TxData `i 382  ]
{
"400
[; ;TestMain.c: 400:             ST7032_vWriteCharSSP2(HEX_LIST[u8RxData / 16]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> / -> _u8RxData `i -> 16 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"401
[; ;TestMain.c: 401:             ST7032_vWriteCharSSP2(HEX_LIST[u8RxData % 16]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> % -> _u8RxData `i -> 16 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"402
[; ;TestMain.c: 402:         } else {
}
[e $U 383  ]
[e :U 382 ]
{
"403
[; ;TestMain.c: 403:             ST7032_vWriteStringSSP2("XX");
[e ( _ST7032_vWriteStringSSP2 (1 :s 3C ]
"404
[; ;TestMain.c: 404:         }
}
[e :U 383 ]
"406
[; ;TestMain.c: 406:         _delay((unsigned long)((20)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"407
[; ;TestMain.c: 407:     }
}
[e ++ _u8TxData -> -> 1 `i `uc ]
[e $ < -> _u8TxData `i -> 255 `i 379  ]
[e :U 380 ]
}
"408
[; ;TestMain.c: 408: }
[e :UE 378 ]
}
"423
[; ;TestMain.c: 423: static void ssp2_vI2CTest02() {
[v _ssp2_vI2CTest02 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vI2CTest02 ]
[f ]
"428
[; ;TestMain.c: 428:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"430
[; ;TestMain.c: 430:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"431
[; ;TestMain.c: 431:     ST7032_vWriteStringSSP2("Test:I2C 02     ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 4C ]
"432
[; ;TestMain.c: 432:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"433
[; ;TestMain.c: 433:     ST7032_vWriteStringSSP2("Tx 0x00->0xFF   ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 5C ]
"435
[; ;TestMain.c: 435:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"441
[; ;TestMain.c: 441:     I2C_u8MstStartSSP2((8), (0));
[e ( _I2C_u8MstStartSSP2 (2 , -> -> 8 `i `uc -> -> 0 `i `uc ]
"443
[; ;TestMain.c: 443:     u8RxData = 0xFF;
[e = _u8RxData -> -> 255 `i `uc ]
"444
[; ;TestMain.c: 444:     unsigned char u8TxData;
[v _u8TxData `uc ~T0 @X0 1 a ]
"445
[; ;TestMain.c: 445:     for (u8TxData = 0; u8TxData < 255; u8TxData++) {
{
[e = _u8TxData -> -> 0 `i `uc ]
[e $ < -> _u8TxData `i -> 255 `i 385  ]
[e $U 386  ]
[e :U 385 ]
{
"446
[; ;TestMain.c: 446:         I2C_u8MstTxSSP2(u8TxData);
[e ( _I2C_u8MstTxSSP2 (1 _u8TxData ]
"448
[; ;TestMain.c: 448:         if (u8RxData != u8TxData) {
[e $ ! != -> _u8RxData `i -> _u8TxData `i 388  ]
{
"449
[; ;TestMain.c: 449:             break;
[e $U 386  ]
"450
[; ;TestMain.c: 450:         }
}
[e :U 388 ]
"451
[; ;TestMain.c: 451:     }
}
[e ++ _u8TxData -> -> 1 `i `uc ]
[e $ < -> _u8TxData `i -> 255 `i 385  ]
[e :U 386 ]
}
"452
[; ;TestMain.c: 452:     I2C_vMstStopSSP2();
[e ( _I2C_vMstStopSSP2 ..  ]
"454
[; ;TestMain.c: 454:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"455
[; ;TestMain.c: 455:     if (u8TxData == 255) {
[e $ ! == -> _u8TxData `i -> 255 `i 389  ]
{
"456
[; ;TestMain.c: 456:         ST7032_vWriteStringSSP2("Tx 0x00->0xFF OK");
[e ( _ST7032_vWriteStringSSP2 (1 :s 6C ]
"457
[; ;TestMain.c: 457:     } else {
}
[e $U 390  ]
[e :U 389 ]
{
"458
[; ;TestMain.c: 458:         ST7032_vWriteStringSSP2("Tx 0x00->0xFF NG");
[e ( _ST7032_vWriteStringSSP2 (1 :s 7C ]
"459
[; ;TestMain.c: 459:     }
}
[e :U 390 ]
"461
[; ;TestMain.c: 461:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"462
[; ;TestMain.c: 462: }
[e :UE 384 ]
}
"477
[; ;TestMain.c: 477: static void ssp2_vI2CTest03() {
[v _ssp2_vI2CTest03 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vI2CTest03 ]
[f ]
"482
[; ;TestMain.c: 482:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"484
[; ;TestMain.c: 484:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"485
[; ;TestMain.c: 485:     ST7032_vWriteStringSSP2("Test:I2C 03     ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 8C ]
"486
[; ;TestMain.c: 486:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"487
[; ;TestMain.c: 487:     ST7032_vWriteStringSSP2("Rx 0x00->0xFF   ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 9C ]
"493
[; ;TestMain.c: 493:     u8RxData = 0x00;
[e = _u8RxData -> -> 0 `i `uc ]
"494
[; ;TestMain.c: 494:     unsigned char u8Data;
[v _u8Data `uc ~T0 @X0 1 a ]
"495
[; ;TestMain.c: 495:     unsigned char u8Cnt;
[v _u8Cnt `uc ~T0 @X0 1 a ]
"496
[; ;TestMain.c: 496:     for (u8Cnt = 0; u8Cnt < 255; u8Cnt++) {
{
[e = _u8Cnt -> -> 0 `i `uc ]
[e $ < -> _u8Cnt `i -> 255 `i 392  ]
[e $U 393  ]
[e :U 392 ]
{
"498
[; ;TestMain.c: 498:         I2C_u8MstStartSSP2((8), (1));
[e ( _I2C_u8MstStartSSP2 (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
"499
[; ;TestMain.c: 499:         u8Data = I2C_u8MstRxSSP2((1));
[e = _u8Data ( _I2C_u8MstRxSSP2 (1 -> -> 1 `i `uc ]
"500
[; ;TestMain.c: 500:         I2C_vMstStopSSP2();
[e ( _I2C_vMstStopSSP2 ..  ]
"501
[; ;TestMain.c: 501:         if (u8Data != u8Cnt) {
[e $ ! != -> _u8Data `i -> _u8Cnt `i 395  ]
{
"502
[; ;TestMain.c: 502:             break;
[e $U 393  ]
"503
[; ;TestMain.c: 503:         }
}
[e :U 395 ]
"504
[; ;TestMain.c: 504:     }
}
[e ++ _u8Cnt -> -> 1 `i `uc ]
[e $ < -> _u8Cnt `i -> 255 `i 392  ]
[e :U 393 ]
}
"506
[; ;TestMain.c: 506:     I2C_u8MstStartSSP2((8), (1));
[e ( _I2C_u8MstStartSSP2 (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
"507
[; ;TestMain.c: 507:     u8Data = I2C_u8MstRxSSP2((1));
[e = _u8Data ( _I2C_u8MstRxSSP2 (1 -> -> 1 `i `uc ]
"508
[; ;TestMain.c: 508:     I2C_vMstStopSSP2();
[e ( _I2C_vMstStopSSP2 ..  ]
"509
[; ;TestMain.c: 509:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"511
[; ;TestMain.c: 511:     ST7032_bSetCursorSSP2(1, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
"512
[; ;TestMain.c: 512:     if (u8Data == 255) {
[e $ ! == -> _u8Data `i -> 255 `i 396  ]
{
"513
[; ;TestMain.c: 513:         ST7032_vWriteStringSSP2("OK");
[e ( _ST7032_vWriteStringSSP2 (1 :s 10C ]
"514
[; ;TestMain.c: 514:     } else {
}
[e $U 397  ]
[e :U 396 ]
{
"515
[; ;TestMain.c: 515:         ST7032_vWriteStringSSP2("NG");
[e ( _ST7032_vWriteStringSSP2 (1 :s 11C ]
"516
[; ;TestMain.c: 516:     }
}
[e :U 397 ]
"518
[; ;TestMain.c: 518:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"519
[; ;TestMain.c: 519: }
[e :UE 391 ]
}
"534
[; ;TestMain.c: 534: static void ssp2_vI2CTest04() {
[v _ssp2_vI2CTest04 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vI2CTest04 ]
[f ]
"539
[; ;TestMain.c: 539:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"541
[; ;TestMain.c: 541:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"542
[; ;TestMain.c: 542:     ST7032_vWriteStringSSP2("Test:I2C 04     ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 12C ]
"543
[; ;TestMain.c: 543:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"544
[; ;TestMain.c: 544:     ST7032_vWriteStringSSP2("Rx 0x00->0xFF   ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 13C ]
"550
[; ;TestMain.c: 550:     u8RxData = 0x00;
[e = _u8RxData -> -> 0 `i `uc ]
"552
[; ;TestMain.c: 552:     I2C_u8MstStartSSP2((8), (1));
[e ( _I2C_u8MstStartSSP2 (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
"553
[; ;TestMain.c: 553:     unsigned char u8Data;
[v _u8Data `uc ~T0 @X0 1 a ]
"554
[; ;TestMain.c: 554:     unsigned char u8Cnt;
[v _u8Cnt `uc ~T0 @X0 1 a ]
"555
[; ;TestMain.c: 555:     for (u8Cnt = 0; u8Cnt < 255; u8Cnt++) {
{
[e = _u8Cnt -> -> 0 `i `uc ]
[e $ < -> _u8Cnt `i -> 255 `i 399  ]
[e $U 400  ]
[e :U 399 ]
{
"557
[; ;TestMain.c: 557:         u8Data = I2C_u8MstRxSSP2((0));
[e = _u8Data ( _I2C_u8MstRxSSP2 (1 -> -> 0 `i `uc ]
"558
[; ;TestMain.c: 558:         if (u8Data != u8Cnt) {
[e $ ! != -> _u8Data `i -> _u8Cnt `i 402  ]
{
"559
[; ;TestMain.c: 559:             break;
[e $U 400  ]
"560
[; ;TestMain.c: 560:         }
}
[e :U 402 ]
"561
[; ;TestMain.c: 561:     }
}
[e ++ _u8Cnt -> -> 1 `i `uc ]
[e $ < -> _u8Cnt `i -> 255 `i 399  ]
[e :U 400 ]
}
"563
[; ;TestMain.c: 563:     u8Data = I2C_u8MstRxSSP2((1));
[e = _u8Data ( _I2C_u8MstRxSSP2 (1 -> -> 1 `i `uc ]
"565
[; ;TestMain.c: 565:     I2C_vMstStopSSP2();
[e ( _I2C_vMstStopSSP2 ..  ]
"566
[; ;TestMain.c: 566:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"568
[; ;TestMain.c: 568:     ST7032_bSetCursorSSP2(1, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
"569
[; ;TestMain.c: 569:     if (u8Data == 255) {
[e $ ! == -> _u8Data `i -> 255 `i 403  ]
{
"570
[; ;TestMain.c: 570:         ST7032_vWriteStringSSP2("OK");
[e ( _ST7032_vWriteStringSSP2 (1 :s 14C ]
"571
[; ;TestMain.c: 571:     } else {
}
[e $U 404  ]
[e :U 403 ]
{
"572
[; ;TestMain.c: 572:         ST7032_vWriteStringSSP2("NG");
[e ( _ST7032_vWriteStringSSP2 (1 :s 15C ]
"573
[; ;TestMain.c: 573:     }
}
[e :U 404 ]
"575
[; ;TestMain.c: 575:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"576
[; ;TestMain.c: 576: }
[e :UE 398 ]
}
"591
[; ;TestMain.c: 591: static void ssp2_vLCDTest01() {
[v _ssp2_vLCDTest01 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vLCDTest01 ]
[f ]
"596
[; ;TestMain.c: 596:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"598
[; ;TestMain.c: 598:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"600
[; ;TestMain.c: 600:     unsigned char val = (unsigned char)(rand() % 0xFF);
[v _val `uc ~T0 @X0 1 a ]
[e = _val -> % ( _rand ..  -> 255 `i `uc ]
"601
[; ;TestMain.c: 601:     ST7032_vWriteStringSSP2("Test:LCD 01 0x");
[e ( _ST7032_vWriteStringSSP2 (1 :s 16C ]
"602
[; ;TestMain.c: 602:     ST7032_vWriteCharSSP2(HEX_LIST[val >> 4 & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & >> -> _val `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"603
[; ;TestMain.c: 603:     ST7032_vWriteCharSSP2(HEX_LIST[val & 0x0F & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & & -> _val `i -> 15 `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"605
[; ;TestMain.c: 605:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"607
[; ;TestMain.c: 607:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"608
[; ;TestMain.c: 608:     for (u8Idx = 0; u8Idx <16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 406  ]
[e $U 407  ]
[e :U 406 ]
{
"610
[; ;TestMain.c: 610:         ST7032_vWriteCharSSP2(val);
[e ( _ST7032_vWriteCharSSP2 (1 -> _val `uc ]
"611
[; ;TestMain.c: 611:         val = (val + 1) % 0xFF;
[e = _val -> % + -> _val `i -> 1 `i -> 255 `i `uc ]
"613
[; ;TestMain.c: 613:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"614
[; ;TestMain.c: 614:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 406  ]
[e :U 407 ]
}
"619
[; ;TestMain.c: 619:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"621
[; ;TestMain.c: 621:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"623
[; ;TestMain.c: 623:     ST7032_vWriteStringSSP2("Test:LCD 01 0x");
[e ( _ST7032_vWriteStringSSP2 (1 :s 17C ]
"624
[; ;TestMain.c: 624:     ST7032_vWriteCharSSP2(HEX_LIST[val >> 4 & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & >> -> _val `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"625
[; ;TestMain.c: 625:     ST7032_vWriteCharSSP2(HEX_LIST[val & 0x0F & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & & -> _val `i -> 15 `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"627
[; ;TestMain.c: 627:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"629
[; ;TestMain.c: 629:     for (u8Idx = 0; u8Idx <16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 409  ]
[e $U 410  ]
[e :U 409 ]
{
"631
[; ;TestMain.c: 631:         ST7032_vWriteDataSSP2(&val, 1);
[e ( _ST7032_vWriteDataSSP2 (2 , &U _val -> -> 1 `i `uc ]
"632
[; ;TestMain.c: 632:         val = (val + 1) % 0xFF;
[e = _val -> % + -> _val `i -> 1 `i -> 255 `i `uc ]
"634
[; ;TestMain.c: 634:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"635
[; ;TestMain.c: 635:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 409  ]
[e :U 410 ]
}
"636
[; ;TestMain.c: 636: }
[e :UE 405 ]
}
"651
[; ;TestMain.c: 651: static void ssp2_vLCDTest02() {
[v _ssp2_vLCDTest02 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vLCDTest02 ]
[f ]
"656
[; ;TestMain.c: 656:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"658
[; ;TestMain.c: 658:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"660
[; ;TestMain.c: 660:     ST7032_vWriteStringSSP2("Test:LCD 02 0x0");
[e ( _ST7032_vWriteStringSSP2 (1 :s 18C ]
"661
[; ;TestMain.c: 661:     ST7032_vWriteCharSSP2(HEX_LIST[ST7032_u8GetCursorRowNoSSP2() & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> ( _ST7032_u8GetCursorRowNoSSP2 ..  `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"663
[; ;TestMain.c: 663:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"665
[; ;TestMain.c: 665:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"666
[; ;TestMain.c: 666:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 413  ]
[e $U 414  ]
[e :U 413 ]
{
"668
[; ;TestMain.c: 668:         if ((u8Idx % 2) == 0) {
[e $ ! == % -> _u8Idx `i -> 2 `i -> 0 `i 416  ]
{
"669
[; ;TestMain.c: 669:             if (ST7032_bSetCursorSSP2(1, u8Idx) == (1)) {
[e $ ! == -> ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc _u8Idx `i -> 1 `i 417  ]
{
"670
[; ;TestMain.c: 670:                 ST7032_vWriteCharSSP2(HEX_LIST[ST7032_u8GetCursorColNoSSP2() & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> ( _ST7032_u8GetCursorColNoSSP2 ..  `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"671
[; ;TestMain.c: 671:             }
}
[e :U 417 ]
"672
[; ;TestMain.c: 672:         } else {
}
[e $U 418  ]
[e :U 416 ]
{
"673
[; ;TestMain.c: 673:             ST7032_bCursorRightSSP2();
[e ( _ST7032_bCursorRightSSP2 ..  ]
"674
[; ;TestMain.c: 674:         }
}
[e :U 418 ]
"676
[; ;TestMain.c: 676:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"677
[; ;TestMain.c: 677:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 413  ]
[e :U 414 ]
}
"678
[; ;TestMain.c: 678:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 419  ]
[e $U 420  ]
[e :U 419 ]
{
"680
[; ;TestMain.c: 680:         if ((u8Idx % 2) == 0) {
[e $ ! == % -> _u8Idx `i -> 2 `i -> 0 `i 422  ]
{
"681
[; ;TestMain.c: 681:             if (ST7032_bSetCursorSSP2(1, 15 - u8Idx) == (1)) {
[e $ ! == -> ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> - -> 15 `i -> _u8Idx `i `uc `i -> 1 `i 423  ]
{
"682
[; ;TestMain.c: 682:                 ST7032_vWriteCharSSP2(HEX_LIST[ST7032_u8GetCursorColNoSSP2() & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> ( _ST7032_u8GetCursorColNoSSP2 ..  `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"683
[; ;TestMain.c: 683:             }
}
[e :U 423 ]
"684
[; ;TestMain.c: 684:         } else {
}
[e $U 424  ]
[e :U 422 ]
{
"685
[; ;TestMain.c: 685:             ST7032_bCursorLeftSSP2();
[e ( _ST7032_bCursorLeftSSP2 ..  ]
"686
[; ;TestMain.c: 686:         }
}
[e :U 424 ]
"688
[; ;TestMain.c: 688:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"689
[; ;TestMain.c: 689:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 419  ]
[e :U 420 ]
}
"694
[; ;TestMain.c: 694:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"696
[; ;TestMain.c: 696:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"698
[; ;TestMain.c: 698:     ST7032_vWriteStringSSP2("Test:LCD 02 0x0");
[e ( _ST7032_vWriteStringSSP2 (1 :s 19C ]
"699
[; ;TestMain.c: 699:     ST7032_vWriteCharSSP2(HEX_LIST[ST7032_u8GetCursorRowNoSSP2() & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> ( _ST7032_u8GetCursorRowNoSSP2 ..  `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"701
[; ;TestMain.c: 701:     ST7032_vDispSettingSSP2((1), (1), (1));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 1 `i `uc ]
"703
[; ;TestMain.c: 703:     for (u8Idx = 0; u8Idx <16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 425  ]
[e $U 426  ]
[e :U 425 ]
{
"705
[; ;TestMain.c: 705:         if ((u8Idx % 2) == 0) {
[e $ ! == % -> _u8Idx `i -> 2 `i -> 0 `i 428  ]
{
"706
[; ;TestMain.c: 706:             ST7032_bSetCursorSSP2(0, u8Idx);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc _u8Idx ]
"707
[; ;TestMain.c: 707:             ST7032_vWriteCharSSP2(HEX_LIST[ST7032_u8GetCursorColNoSSP2() & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> ( _ST7032_u8GetCursorColNoSSP2 ..  `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"708
[; ;TestMain.c: 708:         } else {
}
[e $U 429  ]
[e :U 428 ]
{
"709
[; ;TestMain.c: 709:             ST7032_bCursorRightSSP2();
[e ( _ST7032_bCursorRightSSP2 ..  ]
"710
[; ;TestMain.c: 710:         }
}
[e :U 429 ]
"712
[; ;TestMain.c: 712:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"713
[; ;TestMain.c: 713:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 425  ]
[e :U 426 ]
}
"714
[; ;TestMain.c: 714:     for (u8Idx = 0; u8Idx <16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 430  ]
[e $U 431  ]
[e :U 430 ]
{
"716
[; ;TestMain.c: 716:         if ((u8Idx % 2) == 0) {
[e $ ! == % -> _u8Idx `i -> 2 `i -> 0 `i 433  ]
{
"717
[; ;TestMain.c: 717:             ST7032_bSetCursorSSP2(0, 15 - u8Idx);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> - -> 15 `i -> _u8Idx `i `uc ]
"718
[; ;TestMain.c: 718:             ST7032_vWriteCharSSP2(HEX_LIST[ST7032_u8GetCursorColNoSSP2() & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> ( _ST7032_u8GetCursorColNoSSP2 ..  `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"719
[; ;TestMain.c: 719:         } else {
}
[e $U 434  ]
[e :U 433 ]
{
"720
[; ;TestMain.c: 720:             ST7032_bCursorLeftSSP2();
[e ( _ST7032_bCursorLeftSSP2 ..  ]
"721
[; ;TestMain.c: 721:         }
}
[e :U 434 ]
"723
[; ;TestMain.c: 723:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"724
[; ;TestMain.c: 724:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 430  ]
[e :U 431 ]
}
"729
[; ;TestMain.c: 729:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"731
[; ;TestMain.c: 731:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"733
[; ;TestMain.c: 733:     ST7032_vWriteStringSSP2("Test:LCD 02 ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 20C ]
"735
[; ;TestMain.c: 735:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"737
[; ;TestMain.c: 737:     ST7032_bSetCursorSSP2(1, 38);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 38 `i `uc ]
"738
[; ;TestMain.c: 738:     if (ST7032_bCursorRightSSP2() == (1)) {
[e $ ! == -> ( _ST7032_bCursorRightSSP2 ..  `i -> 1 `i 435  ]
{
"739
[; ;TestMain.c: 739:         ST7032_bSetCursorSSP2(0, 12);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 12 `i `uc ]
"740
[; ;TestMain.c: 740:         ST7032_vWriteCharSSP2('A');
[e ( _ST7032_vWriteCharSSP2 (1 -> -> 65 `ui `uc ]
"741
[; ;TestMain.c: 741:     }
}
[e :U 435 ]
"743
[; ;TestMain.c: 743:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"744
[; ;TestMain.c: 744:     ST7032_bSetCursorSSP2(1, 39);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 39 `i `uc ]
"745
[; ;TestMain.c: 745:     if (ST7032_bCursorRightSSP2() == (0)) {
[e $ ! == -> ( _ST7032_bCursorRightSSP2 ..  `i -> 0 `i 436  ]
{
"746
[; ;TestMain.c: 746:         ST7032_bSetCursorSSP2(0, 13);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 13 `i `uc ]
"747
[; ;TestMain.c: 747:         ST7032_vWriteCharSSP2('B');
[e ( _ST7032_vWriteCharSSP2 (1 -> -> 66 `ui `uc ]
"748
[; ;TestMain.c: 748:     }
}
[e :U 436 ]
"750
[; ;TestMain.c: 750:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"751
[; ;TestMain.c: 751:     ST7032_bSetCursorSSP2(0, 1);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
"752
[; ;TestMain.c: 752:     if (ST7032_bCursorLeftSSP2() == (1)) {
[e $ ! == -> ( _ST7032_bCursorLeftSSP2 ..  `i -> 1 `i 437  ]
{
"753
[; ;TestMain.c: 753:         ST7032_bSetCursorSSP2(0, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 14 `i `uc ]
"754
[; ;TestMain.c: 754:         ST7032_vWriteCharSSP2('C');
[e ( _ST7032_vWriteCharSSP2 (1 -> -> 67 `ui `uc ]
"755
[; ;TestMain.c: 755:     }
}
[e :U 437 ]
"757
[; ;TestMain.c: 757:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"758
[; ;TestMain.c: 758:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"759
[; ;TestMain.c: 759:     if (ST7032_bCursorLeftSSP2() == (0)) {
[e $ ! == -> ( _ST7032_bCursorLeftSSP2 ..  `i -> 0 `i 438  ]
{
"760
[; ;TestMain.c: 760:         ST7032_bSetCursorSSP2(0, 15);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 15 `i `uc ]
"761
[; ;TestMain.c: 761:         ST7032_vWriteCharSSP2('D');
[e ( _ST7032_vWriteCharSSP2 (1 -> -> 68 `ui `uc ]
"762
[; ;TestMain.c: 762:     }
}
[e :U 438 ]
"764
[; ;TestMain.c: 764:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"765
[; ;TestMain.c: 765:     if (ST7032_bSetCursorSSP2(1, 39) == (1)) {
[e $ ! == -> ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 39 `i `uc `i -> 1 `i 439  ]
{
"766
[; ;TestMain.c: 766:         ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"767
[; ;TestMain.c: 767:         ST7032_vWriteCharSSP2('E');
[e ( _ST7032_vWriteCharSSP2 (1 -> -> 69 `ui `uc ]
"768
[; ;TestMain.c: 768:     }
}
[e :U 439 ]
"770
[; ;TestMain.c: 770:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"771
[; ;TestMain.c: 771:     if (ST7032_bSetCursorSSP2(1, 40) == (0)) {
[e $ ! == -> ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 40 `i `uc `i -> 0 `i 440  ]
{
"772
[; ;TestMain.c: 772:         ST7032_bSetCursorSSP2(1, 1);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"773
[; ;TestMain.c: 773:         ST7032_vWriteCharSSP2('F');
[e ( _ST7032_vWriteCharSSP2 (1 -> -> 70 `ui `uc ]
"774
[; ;TestMain.c: 774:     }
}
[e :U 440 ]
"776
[; ;TestMain.c: 776:     _delay((unsigned long)((1000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"777
[; ;TestMain.c: 777: }
[e :UE 412 ]
}
"792
[; ;TestMain.c: 792: static void ssp2_vLCDTest03() {
[v _ssp2_vLCDTest03 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vLCDTest03 ]
[f ]
[v F2641 `uc ~T0 @X0 -> 8 `i s ]
[i F2641
:U ..
"796
[; ;TestMain.c: 796:     unsigned char u8BitMap[] = {0x11, 0x0A, 0x04, 0x15, 0x15, 0x04, 0x0A, 0x11};
-> -> 17 `i `uc
-> -> 10 `i `uc
-> -> 4 `i `uc
-> -> 21 `i `uc
-> -> 21 `i `uc
-> -> 4 `i `uc
-> -> 10 `i `uc
-> -> 17 `i `uc
..
]
[v _u8BitMap `uc ~T0 @X0 -> 8 `i a ]
[e = _u8BitMap F2641 ]
"797
[; ;TestMain.c: 797:     ST7032_vWriteCGRAMSSP2(0x00, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 0 `i `uc &U _u8BitMap ]
"798
[; ;TestMain.c: 798:     u8BitMap[0] = 0x04;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 4 `i `uc ]
"799
[; ;TestMain.c: 799:     u8BitMap[1] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"800
[; ;TestMain.c: 800:     u8BitMap[2] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"801
[; ;TestMain.c: 801:     u8BitMap[3] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"802
[; ;TestMain.c: 802:     u8BitMap[4] = 0x04;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 4 `i `uc ]
"803
[; ;TestMain.c: 803:     u8BitMap[5] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"804
[; ;TestMain.c: 804:     u8BitMap[6] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"805
[; ;TestMain.c: 805:     u8BitMap[7] = 0x0E;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 14 `i `uc ]
"806
[; ;TestMain.c: 806:     ST7032_vWriteCGRAMSSP2(0x01, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 1 `i `uc &U _u8BitMap ]
"807
[; ;TestMain.c: 807:     u8BitMap[0] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"808
[; ;TestMain.c: 808:     u8BitMap[1] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"809
[; ;TestMain.c: 809:     u8BitMap[2] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"810
[; ;TestMain.c: 810:     u8BitMap[3] = 0x04;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 4 `i `uc ]
"811
[; ;TestMain.c: 811:     u8BitMap[4] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"812
[; ;TestMain.c: 812:     u8BitMap[5] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"813
[; ;TestMain.c: 813:     u8BitMap[6] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"814
[; ;TestMain.c: 814:     u8BitMap[7] = 0x04;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 4 `i `uc ]
"815
[; ;TestMain.c: 815:     ST7032_vWriteCGRAMSSP2(0x02, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 2 `i `uc &U _u8BitMap ]
"816
[; ;TestMain.c: 816:     u8BitMap[0] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"817
[; ;TestMain.c: 817:     u8BitMap[1] = 0x00;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 0 `i `uc ]
"818
[; ;TestMain.c: 818:     u8BitMap[2] = 0x0E;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 14 `i `uc ]
"819
[; ;TestMain.c: 819:     u8BitMap[3] = 0x00;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 0 `i `uc ]
"820
[; ;TestMain.c: 820:     u8BitMap[4] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"821
[; ;TestMain.c: 821:     u8BitMap[5] = 0x00;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 0 `i `uc ]
"822
[; ;TestMain.c: 822:     u8BitMap[6] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"823
[; ;TestMain.c: 823:     u8BitMap[7] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"824
[; ;TestMain.c: 824:     ST7032_vWriteCGRAMSSP2(0x03, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 3 `i `uc &U _u8BitMap ]
"825
[; ;TestMain.c: 825:     u8BitMap[0] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"826
[; ;TestMain.c: 826:     u8BitMap[1] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"827
[; ;TestMain.c: 827:     u8BitMap[2] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"828
[; ;TestMain.c: 828:     u8BitMap[3] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"829
[; ;TestMain.c: 829:     u8BitMap[4] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"830
[; ;TestMain.c: 830:     u8BitMap[5] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"831
[; ;TestMain.c: 831:     u8BitMap[6] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"832
[; ;TestMain.c: 832:     u8BitMap[7] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"833
[; ;TestMain.c: 833:     ST7032_vWriteCGRAMSSP2(0x04, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 4 `i `uc &U _u8BitMap ]
"834
[; ;TestMain.c: 834:     u8BitMap[0] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"835
[; ;TestMain.c: 835:     u8BitMap[1] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"836
[; ;TestMain.c: 836:     u8BitMap[2] = 0x0E;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 14 `i `uc ]
"837
[; ;TestMain.c: 837:     u8BitMap[3] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"838
[; ;TestMain.c: 838:     u8BitMap[4] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"839
[; ;TestMain.c: 839:     u8BitMap[5] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"840
[; ;TestMain.c: 840:     u8BitMap[6] = 0x0A;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 10 `i `uc ]
"841
[; ;TestMain.c: 841:     u8BitMap[7] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"842
[; ;TestMain.c: 842:     ST7032_vWriteCGRAMSSP2(0x05, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 5 `i `uc &U _u8BitMap ]
"843
[; ;TestMain.c: 843:     u8BitMap[0] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"844
[; ;TestMain.c: 844:     u8BitMap[1] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"845
[; ;TestMain.c: 845:     u8BitMap[2] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"846
[; ;TestMain.c: 846:     u8BitMap[3] = 0x1D;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 29 `i `uc ]
"847
[; ;TestMain.c: 847:     u8BitMap[4] = 0x01;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 1 `i `uc ]
"848
[; ;TestMain.c: 848:     u8BitMap[5] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"849
[; ;TestMain.c: 849:     u8BitMap[6] = 0x00;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 0 `i `uc ]
"850
[; ;TestMain.c: 850:     u8BitMap[7] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"851
[; ;TestMain.c: 851:     ST7032_vWriteCGRAMSSP2(0x06, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 6 `i `uc &U _u8BitMap ]
"852
[; ;TestMain.c: 852:     u8BitMap[0] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 0 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"853
[; ;TestMain.c: 853:     u8BitMap[1] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 1 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"854
[; ;TestMain.c: 854:     u8BitMap[2] = 0x10;
[e = *U + &U _u8BitMap * -> -> -> 2 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 16 `i `uc ]
"855
[; ;TestMain.c: 855:     u8BitMap[3] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 3 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"856
[; ;TestMain.c: 856:     u8BitMap[4] = 0x01;
[e = *U + &U _u8BitMap * -> -> -> 4 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 1 `i `uc ]
"857
[; ;TestMain.c: 857:     u8BitMap[5] = 0x15;
[e = *U + &U _u8BitMap * -> -> -> 5 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 21 `i `uc ]
"858
[; ;TestMain.c: 858:     u8BitMap[6] = 0x11;
[e = *U + &U _u8BitMap * -> -> -> 6 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 17 `i `uc ]
"859
[; ;TestMain.c: 859:     u8BitMap[7] = 0x1F;
[e = *U + &U _u8BitMap * -> -> -> 7 `i `ui `ux -> -> # *U &U _u8BitMap `ui `ux -> -> 31 `i `uc ]
"860
[; ;TestMain.c: 860:     ST7032_vWriteCGRAMSSP2(0x07, u8BitMap);
[e ( _ST7032_vWriteCGRAMSSP2 (2 , -> -> 7 `i `uc &U _u8BitMap ]
"866
[; ;TestMain.c: 866:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"868
[; ;TestMain.c: 868:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"870
[; ;TestMain.c: 870:     ST7032_vWriteStringSSP2("Test:LCD 03     ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 21C ]
"872
[; ;TestMain.c: 872:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"874
[; ;TestMain.c: 874:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"875
[; ;TestMain.c: 875:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"876
[; ;TestMain.c: 876:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 442  ]
[e $U 443  ]
[e :U 442 ]
{
"878
[; ;TestMain.c: 878:         ST7032_vWriteCharSSP2(u8Idx);
[e ( _ST7032_vWriteCharSSP2 (1 -> _u8Idx `uc ]
"880
[; ;TestMain.c: 880:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"881
[; ;TestMain.c: 881:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 442  ]
[e :U 443 ]
}
"886
[; ;TestMain.c: 886:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"888
[; ;TestMain.c: 888:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"890
[; ;TestMain.c: 890:     ST7032_vWriteStringSSP2("Test:LCD 03     ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 22C ]
"892
[; ;TestMain.c: 892:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"894
[; ;TestMain.c: 894:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"895
[; ;TestMain.c: 895:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 445  ]
[e $U 446  ]
[e :U 445 ]
{
"897
[; ;TestMain.c: 897:         ST7032_vWriteCharSSP2(u8Idx);
[e ( _ST7032_vWriteCharSSP2 (1 -> _u8Idx `uc ]
"899
[; ;TestMain.c: 899:         _delay((unsigned long)((500)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"900
[; ;TestMain.c: 900:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 445  ]
[e :U 446 ]
}
"901
[; ;TestMain.c: 901: }
[e :UE 441 ]
}
"916
[; ;TestMain.c: 916: static void ssp2_vLCDTest04() {
[v _ssp2_vLCDTest04 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vLCDTest04 ]
[f ]
"921
[; ;TestMain.c: 921:     ST7032_vClearDispSSP2();
[e ( _ST7032_vClearDispSSP2 ..  ]
"923
[; ;TestMain.c: 923:     ST7032_vClearIconSSP2();
[e ( _ST7032_vClearIconSSP2 ..  ]
"925
[; ;TestMain.c: 925:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"927
[; ;TestMain.c: 927:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"929
[; ;TestMain.c: 929:     ST7032_vWriteStringSSP2("Test:LCD 04 0:00");
[e ( _ST7032_vWriteStringSSP2 (1 :s 23C ]
"931
[; ;TestMain.c: 931:     unsigned char u8Addr;
[v _u8Addr `uc ~T0 @X0 1 a ]
"932
[; ;TestMain.c: 932:     unsigned char u8SVal;
[v _u8SVal `uc ~T0 @X0 1 a ]
"933
[; ;TestMain.c: 933:     for (u8Addr = 0; u8Addr < 16; u8Addr++) {
{
[e = _u8Addr -> -> 0 `i `uc ]
[e $ < -> _u8Addr `i -> 16 `i 449  ]
[e $U 450  ]
[e :U 449 ]
{
"935
[; ;TestMain.c: 935:         ST7032_bSetCursorSSP2(0, 12);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 12 `i `uc ]
"936
[; ;TestMain.c: 936:         ST7032_vWriteCharSSP2(HEX_LIST[u8Addr & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & -> _u8Addr `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"938
[; ;TestMain.c: 938:         for (u8SVal = 0; u8SVal < 32; u8SVal++) {
{
[e = _u8SVal -> -> 0 `i `uc ]
[e $ < -> _u8SVal `i -> 32 `i 452  ]
[e $U 453  ]
[e :U 452 ]
{
"940
[; ;TestMain.c: 940:             ST7032_bSetCursorSSP2(0, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 14 `i `uc ]
"941
[; ;TestMain.c: 941:             ST7032_vWriteCharSSP2(HEX_LIST[u8SVal >> 4 & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & >> -> _u8SVal `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"942
[; ;TestMain.c: 942:             ST7032_vWriteCharSSP2(HEX_LIST[u8SVal & 0x0F & 0x0F]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> & & -> _u8SVal `i -> 15 `i -> 15 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"944
[; ;TestMain.c: 944:             ST7032_vWriteIconSSP2(u8Addr, u8SVal);
[e ( _ST7032_vWriteIconSSP2 (2 , _u8Addr _u8SVal ]
"946
[; ;TestMain.c: 946:             _delay((unsigned long)((50)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"947
[; ;TestMain.c: 947:         }
}
[e ++ _u8SVal -> -> 1 `i `uc ]
[e $ < -> _u8SVal `i -> 32 `i 452  ]
[e :U 453 ]
}
"948
[; ;TestMain.c: 948:     }
}
[e ++ _u8Addr -> -> 1 `i `uc ]
[e $ < -> _u8Addr `i -> 16 `i 449  ]
[e :U 450 ]
}
"949
[; ;TestMain.c: 949: }
[e :UE 448 ]
}
"964
[; ;TestMain.c: 964: static void ssp2_vKeypadTest01() {
[v _ssp2_vKeypadTest01 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vKeypadTest01 ]
[f ]
"969
[; ;TestMain.c: 969:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"971
[; ;TestMain.c: 971:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"972
[; ;TestMain.c: 972:     ST7032_vWriteStringSSP2("Test:Keypad 01  ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 24C ]
"973
[; ;TestMain.c: 973:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"974
[; ;TestMain.c: 974:     ST7032_vWriteStringSSP2("None   :        ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 25C ]
"978
[; ;TestMain.c: 978:     eInputMode = INPUT_MODE_NONE;
[e = _eInputMode . `E2587 0 ]
"979
[; ;TestMain.c: 979:     KEYPAD_vClearBuffer();
[e ( _KEYPAD_vClearBuffer ..  ]
"981
[; ;TestMain.c: 981:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"982
[; ;TestMain.c: 982:     for (u8Idx = 0; u8Idx < 100; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 100 `i 456  ]
[e $U 457  ]
[e :U 456 ]
{
"983
[; ;TestMain.c: 983:         if (KEYPAD_u8ReadBuffer() == 0xFF) {
[e $ ! == -> ( _KEYPAD_u8ReadBuffer ..  `i -> 255 `i 459  ]
{
"984
[; ;TestMain.c: 984:             ST7032_bSetCursorSSP2(1, 5);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 5 `i `uc ]
"985
[; ;TestMain.c: 985:             ST7032_vWriteCharSSP2(HEX_LIST[10 - (u8Idx / 10)]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _HEX_LIST * -> -> - -> 10 `i / -> _u8Idx `i -> 10 `i `ui `ux -> -> # *U &U _HEX_LIST `ui `ux ]
"986
[; ;TestMain.c: 986:         } else {
}
[e $U 460  ]
[e :U 459 ]
{
"987
[; ;TestMain.c: 987:             ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"988
[; ;TestMain.c: 988:             ST7032_vWriteStringSSP2("None:Error      ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 26C ]
"989
[; ;TestMain.c: 989:         }
}
[e :U 460 ]
"990
[; ;TestMain.c: 990:         _delay((unsigned long)((100)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"991
[; ;TestMain.c: 991:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 100 `i 456  ]
[e :U 457 ]
}
"992
[; ;TestMain.c: 992: }
[e :UE 455 ]
}
"1007
[; ;TestMain.c: 1007: static void ssp2_vKeypadTest02() {
[v _ssp2_vKeypadTest02 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vKeypadTest02 ]
[f ]
"1012
[; ;TestMain.c: 1012:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"1014
[; ;TestMain.c: 1014:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"1015
[; ;TestMain.c: 1015:     ST7032_vWriteStringSSP2("Test:Keypad 02  ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 27C ]
"1016
[; ;TestMain.c: 1016:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"1017
[; ;TestMain.c: 1017:     ST7032_vWriteStringSSP2("Current:Input 1 ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 28C ]
"1022
[; ;TestMain.c: 1022:     eInputMode = INPUT_MODE_CURRENT;
[e = _eInputMode . `E2587 1 ]
"1023
[; ;TestMain.c: 1023:     KEYPAD_vClearBuffer();
[e ( _KEYPAD_vClearBuffer ..  ]
"1024
[; ;TestMain.c: 1024:     u8KeyValue = 0xFF;
[e = _u8KeyValue -> -> 255 `i `uc ]
"1026
[; ;TestMain.c: 1026:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"1027
[; ;TestMain.c: 1027:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 462  ]
[e $U 463  ]
[e :U 462 ]
{
"1028
[; ;TestMain.c: 1028:         while (u8KeyValue != u8Idx) {
[e $U 465  ]
[e :U 466 ]
{
"1029
[; ;TestMain.c: 1029:             _delay((unsigned long)((10)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"1030
[; ;TestMain.c: 1030:         }
}
[e :U 465 ]
"1028
[; ;TestMain.c: 1028:         while (u8KeyValue != u8Idx) {
[e $ != -> _u8KeyValue `i -> _u8Idx `i 466  ]
[e :U 467 ]
"1031
[; ;TestMain.c: 1031:         ST7032_bSetCursorSSP2(1, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
"1032
[; ;TestMain.c: 1032:         ST7032_vWriteCharSSP2(KEY_LIST[u8Idx + 1]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _KEY_LIST * -> -> + -> _u8Idx `i -> 1 `i `ui `ux -> -> # *U &U _KEY_LIST `ui `ux ]
"1033
[; ;TestMain.c: 1033:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 462  ]
[e :U 463 ]
}
"1034
[; ;TestMain.c: 1034: }
[e :UE 461 ]
}
"1049
[; ;TestMain.c: 1049: static void ssp2_vKeypadTest03() {
[v _ssp2_vKeypadTest03 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vKeypadTest03 ]
[f ]
"1054
[; ;TestMain.c: 1054:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"1056
[; ;TestMain.c: 1056:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"1057
[; ;TestMain.c: 1057:     ST7032_vWriteStringSSP2("Test:Keypad 03  ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 29C ]
"1058
[; ;TestMain.c: 1058:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"1059
[; ;TestMain.c: 1059:     ST7032_vWriteStringSSP2("Final  :Input 1 ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 30C ]
"1064
[; ;TestMain.c: 1064:     eInputMode = INPUT_MODE_FINAL;
[e = _eInputMode . `E2587 2 ]
"1065
[; ;TestMain.c: 1065:     KEYPAD_vClearBuffer();
[e ( _KEYPAD_vClearBuffer ..  ]
"1066
[; ;TestMain.c: 1066:     u8KeyValue = 0xFF;
[e = _u8KeyValue -> -> 255 `i `uc ]
"1068
[; ;TestMain.c: 1068:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"1069
[; ;TestMain.c: 1069:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 469  ]
[e $U 470  ]
[e :U 469 ]
{
"1070
[; ;TestMain.c: 1070:         while (KEYPAD_u8ReadFinal() != u8Idx) {
[e $U 472  ]
[e :U 473 ]
{
"1071
[; ;TestMain.c: 1071:             _delay((unsigned long)((2000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"1072
[; ;TestMain.c: 1072:         }
}
[e :U 472 ]
"1070
[; ;TestMain.c: 1070:         while (KEYPAD_u8ReadFinal() != u8Idx) {
[e $ != -> ( _KEYPAD_u8ReadFinal ..  `i -> _u8Idx `i 473  ]
[e :U 474 ]
"1073
[; ;TestMain.c: 1073:         ST7032_bSetCursorSSP2(1, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
"1074
[; ;TestMain.c: 1074:         ST7032_vWriteCharSSP2(KEY_LIST[u8Idx + 1]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _KEY_LIST * -> -> + -> _u8Idx `i -> 1 `i `ui `ux -> -> # *U &U _KEY_LIST `ui `ux ]
"1075
[; ;TestMain.c: 1075:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 469  ]
[e :U 470 ]
}
"1076
[; ;TestMain.c: 1076: }
[e :UE 468 ]
}
"1091
[; ;TestMain.c: 1091: static void ssp2_vKeypadTest04() {
[v _ssp2_vKeypadTest04 `(v ~T0 @X0 1 sf ]
{
[e :U _ssp2_vKeypadTest04 ]
[f ]
"1096
[; ;TestMain.c: 1096:     ST7032_vDispSettingSSP2((1), (1), (0));
[e ( _ST7032_vDispSettingSSP2 (3 , , -> -> 1 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc ]
"1098
[; ;TestMain.c: 1098:     ST7032_bSetCursorSSP2(0, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"1099
[; ;TestMain.c: 1099:     ST7032_vWriteStringSSP2("Test:Keypad 04  ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 31C ]
"1100
[; ;TestMain.c: 1100:     ST7032_bSetCursorSSP2(1, 0);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"1101
[; ;TestMain.c: 1101:     ST7032_vWriteStringSSP2("Buffer :Input 1 ");
[e ( _ST7032_vWriteStringSSP2 (1 :s 32C ]
"1106
[; ;TestMain.c: 1106:     eInputMode = INPUT_MODE_BUFFERING;
[e = _eInputMode . `E2587 3 ]
"1107
[; ;TestMain.c: 1107:     KEYPAD_vClearBuffer();
[e ( _KEYPAD_vClearBuffer ..  ]
"1108
[; ;TestMain.c: 1108:     u8KeyValue = 0xFF;
[e = _u8KeyValue -> -> 255 `i `uc ]
"1110
[; ;TestMain.c: 1110:     unsigned char u8Idx;
[v _u8Idx `uc ~T0 @X0 1 a ]
"1111
[; ;TestMain.c: 1111:     for (u8Idx = 0; u8Idx < 16; u8Idx++) {
{
[e = _u8Idx -> -> 0 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 476  ]
[e $U 477  ]
[e :U 476 ]
{
"1112
[; ;TestMain.c: 1112:         while (KEYPAD_u8ReadBuffer() != u8Idx) {
[e $U 479  ]
[e :U 480 ]
{
"1113
[; ;TestMain.c: 1113:             _delay((unsigned long)((2000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"1114
[; ;TestMain.c: 1114:         }
}
[e :U 479 ]
"1112
[; ;TestMain.c: 1112:         while (KEYPAD_u8ReadBuffer() != u8Idx) {
[e $ != -> ( _KEYPAD_u8ReadBuffer ..  `i -> _u8Idx `i 480  ]
[e :U 481 ]
"1115
[; ;TestMain.c: 1115:         ST7032_bSetCursorSSP2(1, 14);
[e ( _ST7032_bSetCursorSSP2 (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
"1116
[; ;TestMain.c: 1116:         ST7032_vWriteCharSSP2(KEY_LIST[u8Idx + 1]);
[e ( _ST7032_vWriteCharSSP2 (1 *U + &U _KEY_LIST * -> -> + -> _u8Idx `i -> 1 `i `ui `ux -> -> # *U &U _KEY_LIST `ui `ux ]
"1117
[; ;TestMain.c: 1117:     }
}
[e ++ _u8Idx -> -> 1 `i `uc ]
[e $ < -> _u8Idx `i -> 16 `i 476  ]
[e :U 477 ]
}
"1118
[; ;TestMain.c: 1118: }
[e :UE 475 ]
}
[a 16C 84 101 115 116 58 76 67 68 32 48 49 32 48 120 0 ]
[a 17C 84 101 115 116 58 76 67 68 32 48 49 32 48 120 0 ]
[a 3C 88 88 0 ]
[a 6C 84 120 32 48 120 48 48 45 62 48 120 70 70 32 79 75 0 ]
[a 10C 79 75 0 ]
[a 14C 79 75 0 ]
[a 7C 84 120 32 48 120 48 48 45 62 48 120 70 70 32 78 71 0 ]
[a 11C 78 71 0 ]
[a 15C 78 71 0 ]
[a 18C 84 101 115 116 58 76 67 68 32 48 50 32 48 120 48 0 ]
[a 19C 84 101 115 116 58 76 67 68 32 48 50 32 48 120 48 0 ]
[a 23C 84 101 115 116 58 76 67 68 32 48 52 32 48 58 48 48 0 ]
[a 20C 84 101 115 116 58 76 67 68 32 48 50 32 0 ]
[a 28C 67 117 114 114 101 110 116 58 73 110 112 117 116 32 49 32 0 ]
[a 32C 66 117 102 102 101 114 32 58 73 110 112 117 116 32 49 32 0 ]
[a 30C 70 105 110 97 108 32 32 58 73 110 112 117 116 32 49 32 0 ]
[a 2C 84 120 32 48 120 32 32 45 62 82 120 32 48 120 32 32 0 ]
[a 31C 84 101 115 116 58 75 101 121 112 97 100 32 48 52 32 32 0 ]
[a 29C 84 101 115 116 58 75 101 121 112 97 100 32 48 51 32 32 0 ]
[a 27C 84 101 115 116 58 75 101 121 112 97 100 32 48 50 32 32 0 ]
[a 24C 84 101 115 116 58 75 101 121 112 97 100 32 48 49 32 32 0 ]
[a 5C 84 120 32 48 120 48 48 45 62 48 120 70 70 32 32 32 0 ]
[a 9C 82 120 32 48 120 48 48 45 62 48 120 70 70 32 32 32 0 ]
[a 13C 82 120 32 48 120 48 48 45 62 48 120 70 70 32 32 32 0 ]
[a 12C 84 101 115 116 58 73 50 67 32 48 52 32 32 32 32 32 0 ]
[a 21C 84 101 115 116 58 76 67 68 32 48 51 32 32 32 32 32 0 ]
[a 22C 84 101 115 116 58 76 67 68 32 48 51 32 32 32 32 32 0 ]
[a 8C 84 101 115 116 58 73 50 67 32 48 51 32 32 32 32 32 0 ]
[a 4C 84 101 115 116 58 73 50 67 32 48 50 32 32 32 32 32 0 ]
[a 1C 84 101 115 116 58 73 50 67 32 48 49 32 32 32 32 32 0 ]
[a 26C 78 111 110 101 58 69 114 114 111 114 32 32 32 32 32 32 0 ]
[a 25C 78 111 110 101 32 32 32 58 32 32 32 32 32 32 32 32 0 ]
